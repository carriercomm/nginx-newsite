#!/bin/bash

# A little script to create a new site
#
# @author JohnG <john.gieselmann@upsync.com>
#
# @param str $1 The new domain name including the TLD.
# @param str $2 The optional site directory. If blank, it will default to
# /srv/www/<new domain name>/public_html/

# make sure we at least have the new domain name
if [[ -z $1 ]] ; then
    printf "%s\n\n" "Usage: newsite <domain_name.tld> <site-type>"
    printf "%s\n" "Ex: newsite jam.com laravel"
    printf "%s\n" " - jam.com will be inserted as the nginx server_name"
    printf "%s\n" " - site type [html | laravel | php] will determine the default config file used. If none is defined, html is used."
    exit 1
else
    site="$1"
fi

# assign the document root automatically
sites="/srv/www"
doc_root="$sites/$site/public_html"

# set the default config file
if [[ -z $2 ]] ; then
    site_type="html"
elif [[ ! "$2" == "html" && ! "$2" == "php" && ! "$2" == "laravel" ]] ; then
    printf "%s\n" "ERROR: Not an allowed site type [html | php | laravel]"
    exit 1
else
    site_type="$2"
fi

# copy the newsite template virtual host to this new site
sites_available="/etc/nginx/sites-available"
new_conf="$sites_available/$site"
cp $sites_available/default.$site_type $new_conf

# replace the values in the new file
sed -i "s/<%url%>/$site/g" $new_conf

# check if we should add a www. prefix to the URL
www_prompt="Add 'www.' prefix to URL in config file?"
read -p "$www_prompt [y/N]" www_response

if [[ "$www_response" = "y" || "$www_response" = "Y" ]] ; then
    sed -i "s/<%www%>/www.$site/g" $new_conf
    printf "%s\n" "Added www.$site to config file."
else
    sed -i "s/\s<%www%>//g" $new_conf
    printf "%s\n" "Did not add www.$site to config file."
fi

# create the root directory for the site
if [[ ! -d $doc_root ]] ; then
    mkdir -p $doc_root
    printf "%s\n" "Created root directory: $doc_root"
else
    printf "%s\n" "Root directory exists: $doc_root"
fi

# create the log directory for the site
log_dir="/srv/www/$site/logs"
if [[ ! -d $log_dir ]] ; then
    mkdir $log_dir
    printf "%s\n" "Created log directory: $log_dir"
else
    printf "%s\n" "Log directory exists: $log_dir"
fi

# enable the new site by symlinking to sites-enabled
nginx_ensite $site

# check if we should reload nginx
reload_prompt="Reload nginx?"
read -p "$reload_prompt [y/N]" reload_response

if [[ "$reload_response" = "y" || "$reload_response" = "Y" ]] ; then
    nginx_out=$(service nginx reload)
    printf "%s\n" "$nginx_out"
else
    printf "%s\n" "Did not reload nginx."
fi

# reminder message to add the DNS records for this site
printf "\n%s\n" "Donezo. Don't forget to create the DNS records for this new site."

exit 0
